name: OpenTofu CI

on:
  workflow_call:
    inputs:
      environment:
        description: GitHub repository deployment environment
        required: false
        type: string
      tf-directory:
        description: Terraform / OpenTofu working directory
        required: true
        type: string
      destroy:
        description: true will destroy resources to check dependencies between modules
        required: true
        type: boolean
    secrets:
      backend-credentials:
        description: Credentials required to initialise the tf backend
        required: true
      provider-credentials:
        description: Credentials required to authenticate with provider
        required: true

# Disable permissions for all available scopes
permissions: {}

jobs:
  plan-and-apply:
    environment:
      name: ${{ inputs.environment }}
    name: Plan and Apply OpenTofu changes
    permissions:
      actions: read # Required to download repository artifact.
      checks: write # Required to add status summary.
      contents: read # Required to checkout repository.
      id-token: write # Required to authenticate via OIDC.
      pull-requests: write # Required to add PR comment and label.
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TF_TOKEN_APP_TERRAFORM_IO: ${{ secrets.backend-credentials }}
    outputs:
      plan_id: ${{ steps.tf-plan.outputs.identifier }}

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.provider-credentials }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@12f4debbf681675350b6cd1f0ff8ecfbda62027b # v1.0.4
        with:
          #TODO: Read version from providers.tf
          tofu_version: 1.8.2
          tofu_wrapper: true

      - name: Provision TF
        id: tf-plan
        uses: devsectop/tf-via-pr@8ec105a049bb047a7ed5ee182c9548e2208dce86 # v11.1.0
        with:
          arg_chdir: ${{ inputs.tf-directory }}
          arg_command: ${{ github.event_name == 'push' && 'apply' || 'plan' }}
          arg_lock: ${{ github.event_name == 'push' && 'true' || 'false' }}

      - name: Test idempotency
        id: tf-plan-test
        if: ${{ github.event_name == 'push' }}
        env:
          TF_IN_AUTOMATION: true
        run: |
          tofu -chdir=$GITHUB_WORKSPACE/${{ inputs.tf-directory }} plan -concise -compact-warnings -detailed-exitcode

      - name: Test outcome
        if: ${{ steps.tf-plan-test.outputs.exitcode != 0 }}
        run: |
          echo "### :heavy_exclamation_mark: OpenTofu plan produced a diff" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.tf-plan-test.outputs.stdout }} >> $GITHUB_STEP_SUMMARY

      - name: Test outcome
        if: ${{ steps.tf-plan-test.outputs.exitcode == 0 }}
        run: |
          echo "### :white_check_mark: OpenTofu Plan ${{ steps.tf-plan-test.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.tf-plan-test.outputs.stdout }} >> $GITHUB_STEP_SUMMARY

      - name: Destroy
        id: tf-destroy
        if: ${{ github.event_name == 'push' && inputs.destroy == 'true' }}
        env:
          TF_IN_AUTOMATION: true
        run: |
          tofu -chdir=$GITHUB_WORKSPACE/${{ inputs.tf-directory }} destroy -concise -compact-warnings -detailed-exitcode -lock=true tfplan

      - name: Destroy summary
        if: ${{ steps.tf-destroy.outputs.exitcode != 0 }}
        run: |
          echo "### :heavy_exclamation_mark: OpenTofu plan produced a diff" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.tf-plan-test.outputs.stdout }} >> $GITHUB_STEP_SUMMARY

      - name: Destroy summary
        if: ${{ steps.tf-destroy.outputs.exitcode == 0 }}
        run: |
          echo "### :white_check_mark: OpenTofu Plan ${{ steps.tf-plan-test.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.tf-plan-test.outputs.stdout }} >> $GITHUB_STEP_SUMMARY

  #! Only works with terraform
  #TODO: Fork and update index.ts to use tofu instead
  # inkdrop-run:
  #   needs: plan-and-apply
  #   uses: inkdrop-org/inkdrop-visualizer/.github/workflows/inkdrop-plan.yml@main
  #   with:
  #     data_branch_name: ${{ github.head_ref }}
  #     plan_artifact: ${{ needs.preview.outputs.plan_id }}
  #     plan_file_name: tfplan
  #     terraform_version: 1.8.2
